{"version":3,"sources":["pages/Post/Post.module.css","pages/Entry/Entry.module.css","pages/View/View.module.css","pages/Home/Home.module.css","reportWebVitals.js","pages/Entry/Entry.jsx","pages/Home/Home.jsx","pages/data/apiEmail.js","pages/data/privateKey.js","pages/Post/Post.jsx","pages/View/View.jsx","App.jsx","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Entry","class","styles","container","Home","navigate","useNavigate","useState","code","setCode","onClick","write","divContainer","length","state","alert","view","keyText","type","viewInput","onChange","e","target","value","placeholder","apiEmail","privateKey","Post","setRepeat","to1","setTo1","post1","setPost1","to2","setTo2","post2","setPost2","to3","setTo3","post3","setPost3","to4","setTo4","post4","setPost4","from","setFrom","names","setNames","able","setAble","CLIENT_EMAIL","PRIVATE_KEY","doc","GoogleSpreadsheet","spreadsheetID","sendPost","a","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsById","addRow","sender","text","reciever","console","error","fetchName","log","nameSheet","getRows","row","rowcount","rowCount","i","undefined","name","key","useEffect","background","title","postContainer","msgContainer","subtitle","map","message","maxLength","button","View","location","useLocation","UserID","repeat","data","setData","userName","setUserName","fetchData","msgSheet","msgRow","msgRowCount","id","findName","dataSheet","dataRow","dataCount","ID","Message","props","post","filter","d","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48984d1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Post_background__3Hp37\",\"postContainer\":\"Post_postContainer__1f0TT\",\"container\":\"Post_container__23VZp\",\"title\":\"Post_title__2auBG\",\"msgContainer\":\"Post_msgContainer__358f5\",\"subtitle\":\"Post_subtitle__1hGPN\",\"sender\":\"Post_sender__1m1zf\",\"message\":\"Post_message__1Yi9b\",\"button\":\"Post_button__2RGr7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Entry_container__PYx56\",\"homeButton\":\"Entry_homeButton__2AwS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"View_background__1WAN8\",\"container\":\"View_container__2p16e\",\"title\":\"View_title__9PfiF\",\"postContainer\":\"View_postContainer__1ZyLv\",\"post\":\"View_post__6RCKM\",\"subtitle\":\"View_subtitle__3Vg62\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__1s89M\",\"write\":\"Home_write__9pCsA\",\"view\":\"Home_view__Dxe72\",\"divContainer\":\"Home_divContainer__1XoLS\",\"keyText\":\"Home_keyText__XNmOT\",\"viewInput\":\"Home_viewInput__358qt\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport styles from \"./Entry.module.css\";\n\nexport default function Entry() {\n\n    \n\n    return (\n        <div class={styles.container}>\n            {/* <button class={styles.homeButton} onClick={handleButton}>\n                Click Here To Enter\n            </button> */}\n        </div>\n        \n    );\n}","import React from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport styles from \"./Home.module.css\";\nimport Entry from \"../Entry/Entry\";\n\nexport default function Home() {\n\n    let navigate = useNavigate()\n\n    const [code, setCode] = useState('');\n\n    const handlePost = () => {\n        navigate('/post')\n    }\n\n    const handleView = () => {\n        if (code.length === 4) {\n            navigate('/view', {state: code})\n        } else {\n            alert('Please enter a value code')\n        }\n    }\n    \n    return (\n        <div>\n            <Entry/>\n            <div class={styles.container}>\n                <button\n                onClick = {handlePost}\n                class = {styles.write}>\n                    WRITE a message\n                </button>\n                <div class={styles.divContainer}>\n                    <button\n                    onClick = {handleView}\n                    class = {styles.view}>\n                        VIEW your messages\n                    </button>\n                    <text\n                    class = {styles.keyText}>\n                        Key in your 4-digit code:\n                    </text>\n                    <input\n                    type='text'\n                    class = {styles.viewInput}\n                    onChange = {(e)=> setCode(e.target.value)}\n                    placeholder= 'Enter here'>\n                    </input>\n                </div>\n            </div>\n        </div>\n        \n    );\n}","const apiEmail='youmadeadiff@youmadeadifference.iam.gserviceaccount.com';\n\nexport default apiEmail;","const privateKey=\"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC3P6U/cSYoyhnR\\naPMK8OHOAtFxd5ephcW5HIVI6kfkW6mJyc92oWEpKr+158T6ORfoJqAdCQJL5Rpt\\nAr/uJPkd3nCoAhSR0/8sQ2KMqbGqYrJd80KiIhPBOHuYEVu8FmG36Lcq2iPWXxNZ\\nbHTk+2bRsVJqHDa5Ikd3VR81YLxgRwhhItae+pAGZDXKKr1frHVE0KOlUBtkwP/q\\n7jRa/Z7A3iDB53Dy9GFqXf93e+ixRzPR4MffvI683TwYWlprUFfcEub79JAzYixB\\nGdJPeGJyvv41A8B15PnaCNp48OqM1a5jjdYp9ZDWZYGwJg1W8b6iFcLLh5YW15HH\\nDnzJJocnAgMBAAECggEAEfxou0PfU3SWuSOca0/+UcqcBQ+Qbr6nDAa9HE2Gdeb7\\nSn9o4gNv9mrwOyn+/vJYotwbrg3i0FEx2U5CSV0OqHxbQVpG65NLwevxQc4sFoWu\\nbSNBwIkouDfThbb6cokd2T+5rraPeuyFCStog8sbKezGIo0XX+955UARGpuekbJs\\nfqfssGbGDIKENPBBCnPpYfanZSlhcfYvkMwzHc3aF4d+PFlPn2tpHDb8PLlmnztc\\n5gwsS4mK7TcYrPuvkxm2TJyf/HpauI0cOWX2VoI6lw7BDIcGYgIxTBN61DxDI+vl\\nWHaWWvX3lBTIY1U13RkTDhw7rJTenvPCiMr322mDJQKBgQDp97r0FCWsc3ekwK/U\\ns6SZwc//cb148S4AReM6/qQvNqozvz4LJq7oQjZnLvu/+fB/nwv+tJUaxq11DMX0\\nxrGmEYxK/rC2WQl97kD+SFLYQlY2ShUBH/rGRz862Ytzv2bddQa6yf2x+hdyllo6\\nMeAzhRWpo+ZzWK7H4vnCcIp0CwKBgQDIgTph18MuTZfylV8NGUcfbouAfXyFyIma\\n79AEUy1dGSdMoZKnfr5l48IXm7Zo4o9PrDEputS8BoC7FTJF5JBPwYjViHHUXVP5\\nTXJrOKcO4kCe3/cg4QFpT0yaKWltzQN4d3SCNfLf1WznUXMbgUhg+teh40txWcs0\\nVA1hFY4u1QKBgQDItLcwAsh+s18Dejhb4u9k5xojK9M6GMs5eLqBNUhrKB3B3mC+\\n+CQ7IfHBelCEU0i4chu8F/WAzsamDpsSbBChQZR0ESBOjPrTiLtAZ5KJ6f5C/DIg\\nkOpzhVL8jPpQBPWdLHLlcbmsH7pVlh04puiJybTXnb5nXMAywMc4wYpEGQKBgAqZ\\n0oVjy/0BuzvnK9xcbsc5qASGHfRQ0v2vGjdwUmCuuMYzcLaMW/K1JQjsgatv9xXG\\nS98h8qdyTJIXn83UNNESsXJgwWvx90OiFZ+XojWGPtZnjwBdBR8VQz6PW/SjN0DC\\nSBWuVoYBGb3tL4HPxwzhlk8H3nBCyByfKQnuAtN1AoGAQoBUgDYxcxFXvz0QBDEQ\\n1q/OVO4z+Af59g0UdpPaKikGzKJ5kg0bQM+c6Rf8nQmsY0imJO1PBTPoafPuMZnV\\nbh+uZTRuhVGy4OmhhQ6g+tId0zSuabYmirlb6vfvuJ5nEfhBw66E4aYuyLlnmLtp\\njLjzzwnGmWFZoJu3AH0nl8I=\\n-----END PRIVATE KEY-----\\n\";\n\nexport default privateKey;","import { useEffect, useState } from \"react\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport styles from \"./Post.module.css\"\nimport spreadsheetID from \"../data/spreadsheetID\";\nimport apiEmail from \"../data/apiEmail\";\nimport privateKey from \"../data/privateKey\";\n\nexport default function Post() {\n\n    const [repeat, setRepeat] = useState(true);\n\n    const [to1, setTo1] = useState(\"N/A\");\n    const [post1, setPost1] = useState(\"\");\n\n    const [to2, setTo2] = useState(\"N/A\");\n    const [post2, setPost2] = useState(\"\");\n\n    const [to3, setTo3] = useState(\"N/A\");\n    const [post3, setPost3] = useState(\"\");\n\n    const [to4, setTo4] = useState(\"N/A\");\n    const [post4, setPost4] = useState(\"\");\n\n    const [from, setFrom] = useState(\"N/A\");\n\n    const [names, setNames] = useState([]);\n\n    const [able, setAble] = useState(false);\n\n    const SPREADSHEET_ID = spreadsheetID;\n    const CLIENT_EMAIL = apiEmail;\n    const PRIVATE_KEY = privateKey;\n    const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\n\n    const sendPost = async () => {\n        if (!able) {\n            alert(\"You need to fill in all the forms before submitting\")\n            return\n        }\n        alert(\"Sending your messages\")\n        try {\n            await doc.useServiceAccountAuth({\n                client_email: CLIENT_EMAIL,\n                private_key: PRIVATE_KEY,\n            });\n\n            await doc.loadInfo();\n\n            const sheet = doc.sheetsById[703195283]\n            await sheet.addRow({ sender: from, text: post1, reciever: to1 });\n            await sheet.addRow({ sender: from, text: post2, reciever: to2 });\n            await sheet.addRow({ sender: from, text: post3, reciever: to3 });\n            await sheet.addRow({ sender: from, text: post4, reciever: to4 });\n            alert(\"Messages have been sent\")\n        } catch (e) {\n            console.error('Error: ', e);\n        }\n    }\n\n    const fetchName = async () => {\n        console.log('start')\n        try {\n            await doc.useServiceAccountAuth({\n                client_email: CLIENT_EMAIL,\n                private_key: PRIVATE_KEY,\n            });\n\n            await doc.loadInfo();\n\n            const nameSheet = doc.sheetsById[1367631636]\n\n            const row = await nameSheet.getRows();\n            const rowcount = nameSheet.rowCount;\n\n            for (let i = 0; i < rowcount-1; i++){\n                try {\n                    if (row[i] !== undefined) {\n                        setNames(names => [...names, {name: row[i].name, key: i}])\n                    } else {\n                        break\n                    }\n                } catch (e) {\n                    console.error(e)\n                }\n            }\n            \n        } catch (e) {\n            console.log(e)\n        }\n    }\n    // eslint-disable-next-line\n    useEffect(() => {\n        if (repeat) {}\n            fetchName()\n            setRepeat(false)\n    });\n    useEffect(() => {\n        if (to1 !== \"N/A\" && post1 !== \"\" && \n        to2 !== \"N/A\" && post2 !== \"\" &&\n        to3 !== \"N/A\" && post3 !== \"\" &&\n        to4 !== \"N/A\" && post4 !== \"\" &&\n        from !== \"N/A\" ){\n            setAble(true)\n        }\n        else {\n            setAble(false)\n        }\n    },[to1, post1, to2, post2, to3, post3, to4, post4, from])\n\n    return (\n        <div class={styles.background}>\n            <div class={styles.container}>\n                <text class={styles.title}>\n                    Write Your Messages\n                </text>\n                <div class={styles.postContainer}>\n                    <div class={styles.msgContainer}>\n                        <text class={styles.subtitle}>\n                            To:\n                        </text>\n                        <select \n                        onChange={(e) => setTo1(e.target.value)}\n                        class ={styles.sender}>\n                            <option value='N/A'>Pick one</option>\n                            {names.map(({name,key}) => (\n                                <option value={name} key={key}>{name}</option>\n                            ))}\n                        </select>\n                        <text class={styles.subtitle}>\n                            Message:\n                        </text>\n                        <textarea class={styles.message}\n                        maxLength= \"500\"\n                        onChange={(e) => setPost1(e.target.value)}>\n                        </textarea>\n                    </div>\n                    <div class={styles.msgContainer}>\n                        <text class={styles.subtitle}>\n                            To:\n                        </text>\n                        <select \n                        onChange={(e) => setTo2(e.target.value)}\n                        class ={styles.sender}>\n                            <option value='N/A'>Pick one</option>\n                            {names.map(({name,key}) => (\n                                <option value={name} key={key}>{name}</option>\n                            ))}\n                        </select>\n                        <text class={styles.subtitle}>\n                            Message:\n                        </text>\n                        <textarea class={styles.message} maxLength= \"500\" onChange={(e) => setPost2(e.target.value)}>\n                        </textarea>\n                    </div>\n                    <div class={styles.msgContainer}>\n                        <text class={styles.subtitle}>\n                            To:\n                        </text>\n                        <select \n                        onChange={(e) => setTo3(e.target.value)}\n                        class ={styles.sender}>\n                            <option value='N/A'>Pick one</option>\n                            {names.map(({name,key}) => (\n                                <option value={name} key={key}>{name}</option>\n                            ))}\n                        </select>\n                        <text class={styles.subtitle}>\n                            Message:\n                        </text>\n                        <textarea class={styles.message} maxLength= \"500\"\n                        onChange={(e) => setPost3(e.target.value)}>\n                        </textarea>\n                    </div>\n\n                    <div class={styles.msgContainer}>\n                        <text class={styles.subtitle}>\n                            To:\n                        </text>\n                        <select \n                        onChange={(e) => setTo4(e.target.value)}\n                        class ={styles.sender}>\n                            <option value='N/A'>Pick one</option>\n                            {names.map(({name,key}) => (\n                                <option value={name} key={key}>{name}</option>\n                            ))}\n                        </select>\n                        <text class={styles.subtitle}>\n                            Message:\n                        </text>\n                        <textarea class={styles.message} maxLength= \"500\" \n                        onChange={(e) => setPost4(e.target.value)}>\n                        </textarea>\n                    </div>\n                    <div class={styles.msgContainer}>\n                        <text class={styles.subtitle}>\n                            From:\n                        </text>\n                        <select \n                        onChange={(e) => setFrom(e.target.value)}\n                        class ={styles.sender}>\n                            <option value='N/A'>Pick one</option>\n                            {names.map(({name,key}) => (\n                                <option value={name} key={key}>{name}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div class={styles.msgContainer}>\n                        <button\n                        onClick={sendPost}\n                        class={styles.button}>\n                            Submit\n                        </button>\n                    </div>\n                </div>\n            </div>\n            {/* <text>\n                Welcome to the posting screen\n            </text>\n\n            <text> Sender: </text>\n            <select onClick={getData} onChange={(e) => setSender(e.target.value)}>\n                <option value='N/A'>Pick one</option>\n                {data.map(({name,key}) => (\n                    <option value={name} key={key}>{name}</option>\n                ))}\n            </select>\n\n            <text> Text: </text>\n            <input\n            type='text'\n            value = {msg}\n            onChange={(e) => setMessage(e.target.value)} />\n\n            <text> Reciever: </text>\n            <select onClick={getData} onChange={(e) => setReciever(e.target.value)}>\n                <option value='N/A'>Pick one</option>\n                {data.map(({name,key}) => (\n                    <option value={name} key={key}>{name}</option>\n                ))}\n            </select>\n\n            <button\n            onClick = {sendData}>\n                submit\n            </button> */}\n\n        </div>\n    )\n}","import { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport styles from \"./View.module.css\"\nimport spreadsheetID from \"../data/spreadsheetID\";\nimport apiEmail from \"../data/apiEmail\";\nimport privateKey from \"../data/privateKey\";\n\nexport default function View() {\n\n    let location = useLocation()\n\n    const SPREADSHEET_ID = spreadsheetID;\n    const CLIENT_EMAIL = apiEmail;\n    const PRIVATE_KEY = privateKey;\n    const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\n\n    let UserID = location.state\n\n    const [repeat, setRepeat] = useState(true);\n    const [data, setData] = useState([]);\n    const [userName, setUserName] = useState();\n\n    const fetchData = async () => {\n        try {\n            await doc.useServiceAccountAuth({\n                client_email: CLIENT_EMAIL,\n                private_key: PRIVATE_KEY,\n            });\n\n            await doc.loadInfo();\n\n            const msgSheet = doc.sheetsById[703195283]\n            const msgRow = await msgSheet.getRows();\n            const msgRowCount = msgSheet.rowCount;\n            for (let i = 0; i < msgRowCount-1; i++) {\n                if (msgRow[i] !== undefined) {\n                    setData(data => [...data, {sender: msgRow[i].sender, text: msgRow[i].text, reciever: msgRow[i].reciever, id: i}])\n                } else {\n                    return\n                }\n            }\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const findName = async () => {\n        try {\n            await doc.useServiceAccountAuth({\n                client_email: CLIENT_EMAIL,\n                private_key: PRIVATE_KEY,\n            });\n\n            await doc.loadInfo();\n\n            const dataSheet = doc.sheetsById[1367631636]\n            const dataRow = await dataSheet.getRows();\n            const dataCount = dataSheet.rowCount;\n\n            for (let i = 0; i < dataCount-1; i ++){\n                if (dataRow[i] !== undefined) {\n                    if (dataRow[i].ID === UserID) {\n                        setUserName(dataRow[i].name)\n                    }\n                } else { \n                    return\n                }\n            }\n\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    function Message(props) {\n        return (\n            <div key={props.id} class={styles.post}>\n                <text>From: {props.sender}</text>\n                <text class={styles.subtitle}>\n                    Message:\n                </text>\n                <text class={styles.subtitle}>\n                    {props.text}\n                </text>\n            </div>\n        )\n    }\n    // eslint-disable-next-line\n    useEffect(()=> {\n        if (repeat) {\n            fetchData()\n            findName()\n            setRepeat(false)\n        }\n    })\n\n    return(\n        <div class={styles.background}>\n            <div class={styles.container}>\n                <text class={styles.title}>You're loved and appriciated</text>\n                <div class={styles.postContainer}>\n                    {data.filter(d => d.reciever === userName).map(({sender,text,reciever,id}) => (\n                        <Message sender={sender} text={text} reciever={reciever} key={id}/>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\nimport Home from \"./pages/Home/Home\";\nimport Post from \"./pages/Post/Post\";\nimport View from \"./pages/View/View\";\n\nexport default function App() {\n    return (\n        <div>\n            <Router>\n                <Routes>\n                    <Route path=\"/\" element={<Home/>} />\n                    <Route path=\"/home\" element={<Home/>}/>\n                    <Route path=\"/view\" element={<View/>} />\n                    <Route path=\"/post\" element={<Post/>} />\n                </Routes>\n            </Router>\n        </div>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}